name: Deploy
on:
  push:
    branches: [ main ]

jobs:
  # pre-deploy:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image
  #     run: docker-compose build
  deploy:  
    # needs: [pre-deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Reset Permissions before deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo mkdir temp-folder
            sudo chmod -R 755  /home/developer/temp-folder
            sudo chown -R developer:developer  /home/developer/temp-folder

      - uses: actions/checkout@v2
      - name: Deploy source-code
        uses: appleboy/scp-action@master          
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "*"
          target: "/home/developer/temp-folder"

      - name: Reset Permissions after deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{secrets.SSH_PORT}}
          script: |
            sudo rm -rf /home/developer/new.obfm.uz/*
            sudo cp -rf  /home/developer/temp-folder/* /home/developer/new.obfm.uz/
            sudo rm -rf /home/developer/temp-folder
            sudo chmod -R 755  /home/developer/new.obfm.uz
            sudo chown -R developer:developer  /home/developer/new.obfm.uz
  run-docker:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Building images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          target: '/home/developer/www.obfm.uz'
          script: | 
            cd new.obfm.uz 
            docker-compose build --no-cache
      - name: Cleaning containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          target: '/home/developer/www.obfm.uz'
          script: | 
            cd new.obfm.uz
            docker-compose down --remove-orphans -v
            docker volume prune
      - name: Run app in docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          target: '/home/developer/www.obfm.uz'
          script: | 
            cd new.obfm.uz
            docker-compose up -d --force-recreate
      - name: Cleaning images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          target: '/home/developer/www.obfm.uz'
          script: |
            docker image prune -f

